@columns: 12;
@offset: 10px;
@offset_one_side: (@offset / 2);
@atom: (100% / @columns);

@break_md1174: 1174px;
@break_md: 992px;
@break_sm: 720px;
@break_xs: 576px;
@break_xxs: 380px;

.reset(){
    body,div,dl,dt,dd,ul,li,h1,h2,h3,h4,h5,h6,pre,code,form,fieldset,input,textarea,p,blockquote,th,td{
        margin: 0;
        padding: 0;
    }
    table{
        border-collapse: collapse;
        border-spacing: 0;
    }
    fieldset,img,abbr{
        border: 0;
    }
    address,caption,cite,code,dfn,em,strong,th,var{
        font-style: normal;
        font-weight: normal;
    }
    ul li{
        list-style: none;
    }
    caption,th{
        text-align: left;
    }
    h1,h2,h3,h4,h5,h6{
        font-size: 100%;
        font-weight: normal;
    }
    sup{
        vertical-align: text-top;
    }
    sub{
        vertical-align: text-bottom;
    }
    input,textarea,select{
        font-family: inherit;
        font-size: inherit;
        font-weight: inherit;
    }
    legend{
        color: #000;
    }
    article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section,main{
        display: block;
    }
    img{
        max-width: 100%;
        height: auto;
    }
}

.wrapper(){
    max-width: 1300px;
    padding-left: 30px;
    padding-right: 30px;
    margin: 0 auto;

    @media screen and (max-width: @break_md1174){
        padding-left: 20px;
        padding-right: 20px;
    }

    @media screen and (max-width: @break_md){
        padding-left: 20px;
        padding-right: 20px;
    }

    @media screen and (max-width: @break_sm){
        padding-left: 10px;
        padding-right: 10px;
    }

    @media screen and (max-width: @break_xs){
        padding-left: 5px;
        padding-right: 5px;
    }

    @media screen and (max-width: @break_xxs){
        padding-left: 5px;
        padding-right: 5px;
    }
}
.row-flex(){
    display: flex;
    flex-wrap: wrap;
    margin-left: (@offset_one_side * -1);
    margin-right: (@offset_one_side * -1);
}
.row-float(){
    margin-left: (@offset_one_side * -1);
    margin-right: (@offset_one_side * -1);
    .clearfix();
}
.col(){
    box-sizing: border-box;
    margin-left: @offset_one_side;
    margin-right: @offset_one_side;
    word-wrap: break-word;
}
.col-float(){
    float: left;
}
.col-padding(){
    padding-left: @offset_one_side;
    padding-right: @offset_one_side;
    word-wrap: break-word;
}
.size(@n){
    @value: @atom * @n;
    width: ~"calc(@{value} - @{offset})";
}
.offset(@n){
    @value: @atom * @n;
    margin-left: ~"calc(@{value} + @{offset_one_side})";
    margin-right: ~"calc(@{value} + @{offset_one_side})";
}
.offset-left(@n){
    @value: @atom * @n;
    margin-left: ~"calc(@{value} + @{offset_one_side})";
}
.offset-right(@n){
    @value: @atom * @n;
    margin-right: ~"calc(@{value} + @{offset_one_side})";
}
.offset-padding(@n){
    @value: @atom * @n;
    padding-left: ~"calc(@{value} + @{offset_one_side})";
    padding-right: ~"calc(@{value} + @{offset_one_side})";
}
.offset-left-padding(@n){
    @value: @atom * @n;
    padding-left: ~"calc(@{value} + @{offset_one_side})";
}
.offset-right-padding(@n){
    @value: @atom * @n;
    padding-right: ~"calc(@{value} + @{offset_one_side})";
}
.justify-content(@value){
    justify-content: @value;
}
.align-items(@value){
    align-items: @value;
}
.align-content(@value){
    align-content: @value;
}
.align-self(@value){
    align-self: @value;
}
.order(@value){
    order: @value;
}
.flex(@value){
    flex: @value;
}
.flex-grow(@value){
    flex-grow: @value;
}
.flex-shrink(@value){
    flex-shrink: @value;
}
.flex-basis(@value){
    flex-basis: @value;
}
.flex-direction(@value){
    flex-direction: @value;
}
.flex-wrap(@value){
    flex-wrap: @value;
}
.flex-flow(@value){
    flex-flow: @value;
}
.float(@value){
    float: @value;
}
.size-md1174(@n){
    @media screen and (max-width: @break_md1174){
        @value: @atom * @n;
        width: ~"calc(@{value} - @{offset})";
    }
}
.offset-md1174(@n){
    @media screen and (max-width: @break_md1174){
        @value: @atom * @n;
        margin-left: ~"calc(@{value} + @{offset_one_side})";
        margin-right: ~"calc(@{value} + @{offset_one_side})";
    }
}
.offset-left-md1174(@n){
    @media screen and (max-width: @break_md1174){
        @value: @atom * @n;
        margin-left: ~"calc(@{value} + @{offset_one_side})";
    }
}
.offset-right-md1174(@n){
    @media screen and (max-width: @break_md1174){
        @value: @atom * @n;
        margin-right: ~"calc(@{value} + @{offset_one_side})";
    }
}
.offset-padding-md1174(@n){
    @media screen and (max-width: @break_md1174){
        @value: @atom * @n;
        padding-left: ~"calc(@{value} + @{offset_one_side})";
        padding-right: ~"calc(@{value} + @{offset_one_side})";
    }
}
.offset-left-padding-md1174(@n){
    @media screen and (max-width: @break_md1174){
        @value: @atom * @n;
        padding-left: ~"calc(@{value} + @{offset_one_side})";
    }
}
.offset-right-padding-md1174(@n){
    @media screen and (max-width: @break_md1174){
        @value: @atom * @n;
        padding-right: ~"calc(@{value} + @{offset_one_side})";
    }
}
.justify-content-md1174(@value){
    @media screen and (max-width: @break_md1174){
        justify-content: @value;
    }
}
.align-items-md1174(@value){
    @media screen and (max-width: @break_md1174){
        align-items: @value;
    }
}
.align-content-md1174(@value){
    @media screen and (max-width: @break_md1174){
        align-content: @value;
    }
}
.align-self-md1174(@value){
    @media screen and (max-width: @break_md1174){
        align-self: @value;
    }
}
.order-md1174(@value){
    @media screen and (max-width: @break_md1174){
        order: @value;
    }
}
.flex-md1174(@value){
    @media screen and (max-width: @break_md1174){
        flex: @value;
    }
}
.flex-grow-md1174(@value){
    @media screen and (max-width: @break_md1174){
        flex-grow: @value;
    }
}
.flex-shrink-md1174(@value){
    @media screen and (max-width: @break_md1174){
        flex-shrink: @value;
    }
}
.flex-basis-md1174(@value){
    @media screen and (max-width: @break_md1174){
        flex-basis: @value;
    }
}
.flex-direction-md1174(@value){
    @media screen and (max-width: @break_md1174){
        flex-direction: @value;
    }
}
.flex-wrap-md1174(@value){
    @media screen and (max-width: @break_md1174){
        flex-wrap: @value;
    }
}
.flex-flow-md1174(@value){
    @media screen and (max-width: @break_md1174){
        flex-flow: @value;
    }
}
.float-md1174(@value){
    @media screen and (max-width: @break_md1174){
        float: @value;
    }
}
.md1174(@name, @value){
    @media screen and (max-width: @break_md1174){
        @{name}: @value;
    }
}
.md1174-block(@content){
    @media screen and (max-width: @break_md1174){
        @content();
    }
}
.size-md(@n){
    @media screen and (max-width: @break_md){
        @value: @atom * @n;
        width: ~"calc(@{value} - @{offset})";
    }
}
.offset-md(@n){
    @media screen and (max-width: @break_md){
        @value: @atom * @n;
        margin-left: ~"calc(@{value} + @{offset_one_side})";
        margin-right: ~"calc(@{value} + @{offset_one_side})";
    }
}
.offset-left-md(@n){
    @media screen and (max-width: @break_md){
        @value: @atom * @n;
        margin-left: ~"calc(@{value} + @{offset_one_side})";
    }
}
.offset-right-md(@n){
    @media screen and (max-width: @break_md){
        @value: @atom * @n;
        margin-right: ~"calc(@{value} + @{offset_one_side})";
    }
}
.offset-padding-md(@n){
    @media screen and (max-width: @break_md){
        @value: @atom * @n;
        padding-left: ~"calc(@{value} + @{offset_one_side})";
        padding-right: ~"calc(@{value} + @{offset_one_side})";
    }
}
.offset-left-padding-md(@n){
    @media screen and (max-width: @break_md){
        @value: @atom * @n;
        padding-left: ~"calc(@{value} + @{offset_one_side})";
    }
}
.offset-right-padding-md(@n){
    @media screen and (max-width: @break_md){
        @value: @atom * @n;
        padding-right: ~"calc(@{value} + @{offset_one_side})";
    }
}
.justify-content-md(@value){
    @media screen and (max-width: @break_md){
        justify-content: @value;
    }
}
.align-items-md(@value){
    @media screen and (max-width: @break_md){
        align-items: @value;
    }
}
.align-content-md(@value){
    @media screen and (max-width: @break_md){
        align-content: @value;
    }
}
.align-self-md(@value){
    @media screen and (max-width: @break_md){
        align-self: @value;
    }
}
.order-md(@value){
    @media screen and (max-width: @break_md){
        order: @value;
    }
}
.flex-md(@value){
    @media screen and (max-width: @break_md){
        flex: @value;
    }
}
.flex-grow-md(@value){
    @media screen and (max-width: @break_md){
        flex-grow: @value;
    }
}
.flex-shrink-md(@value){
    @media screen and (max-width: @break_md){
        flex-shrink: @value;
    }
}
.flex-basis-md(@value){
    @media screen and (max-width: @break_md){
        flex-basis: @value;
    }
}
.flex-direction-md(@value){
    @media screen and (max-width: @break_md){
        flex-direction: @value;
    }
}
.flex-wrap-md(@value){
    @media screen and (max-width: @break_md){
        flex-wrap: @value;
    }
}
.flex-flow-md(@value){
    @media screen and (max-width: @break_md){
        flex-flow: @value;
    }
}
.float-md(@value){
    @media screen and (max-width: @break_md){
        float: @value;
    }
}
.md(@name, @value){
    @media screen and (max-width: @break_md){
        @{name}: @value;
    }
}
.md-block(@content){
    @media screen and (max-width: @break_md){
        @content();
    }
}
.size-sm(@n){
    @media screen and (max-width: @break_sm){
        @value: @atom * @n;
        width: ~"calc(@{value} - @{offset})";
    }
}
.offset-sm(@n){
    @media screen and (max-width: @break_sm){
        @value: @atom * @n;
        margin-left: ~"calc(@{value} + @{offset_one_side})";
        margin-right: ~"calc(@{value} + @{offset_one_side})";
    }
}
.offset-left-sm(@n){
    @media screen and (max-width: @break_sm){
        @value: @atom * @n;
        margin-left: ~"calc(@{value} + @{offset_one_side})";
    }
}
.offset-right-sm(@n){
    @media screen and (max-width: @break_sm){
        @value: @atom * @n;
        margin-right: ~"calc(@{value} + @{offset_one_side})";
    }
}
.offset-padding-sm(@n){
    @media screen and (max-width: @break_sm){
        @value: @atom * @n;
        padding-left: ~"calc(@{value} + @{offset_one_side})";
        padding-right: ~"calc(@{value} + @{offset_one_side})";
    }
}
.offset-left-padding-sm(@n){
    @media screen and (max-width: @break_sm){
        @value: @atom * @n;
        padding-left: ~"calc(@{value} + @{offset_one_side})";
    }
}
.offset-right-padding-sm(@n){
    @media screen and (max-width: @break_sm){
        @value: @atom * @n;
        padding-right: ~"calc(@{value} + @{offset_one_side})";
    }
}
.justify-content-sm(@value){
    @media screen and (max-width: @break_sm){
        justify-content: @value;
    }
}
.align-items-sm(@value){
    @media screen and (max-width: @break_sm){
        align-items: @value;
    }
}
.align-content-sm(@value){
    @media screen and (max-width: @break_sm){
        align-content: @value;
    }
}
.align-self-sm(@value){
    @media screen and (max-width: @break_sm){
        align-self: @value;
    }
}
.order-sm(@value){
    @media screen and (max-width: @break_sm){
        order: @value;
    }
}
.flex-sm(@value){
    @media screen and (max-width: @break_sm){
        flex: @value;
    }
}
.flex-grow-sm(@value){
    @media screen and (max-width: @break_sm){
        flex-grow: @value;
    }
}
.flex-shrink-sm(@value){
    @media screen and (max-width: @break_sm){
        flex-shrink: @value;
    }
}
.flex-basis-sm(@value){
    @media screen and (max-width: @break_sm){
        flex-basis: @value;
    }
}
.flex-direction-sm(@value){
    @media screen and (max-width: @break_sm){
        flex-direction: @value;
    }
}
.flex-wrap-sm(@value){
    @media screen and (max-width: @break_sm){
        flex-wrap: @value;
    }
}
.flex-flow-sm(@value){
    @media screen and (max-width: @break_sm){
        flex-flow: @value;
    }
}
.float-sm(@value){
    @media screen and (max-width: @break_sm){
        float: @value;
    }
}
.sm(@name, @value){
    @media screen and (max-width: @break_sm){
        @{name}: @value;
    }
}
.sm-block(@content){
    @media screen and (max-width: @break_sm){
        @content();
    }
}
.size-xs(@n){
    @media screen and (max-width: @break_xs){
        @value: @atom * @n;
        width: ~"calc(@{value} - @{offset})";
    }
}
.offset-xs(@n){
    @media screen and (max-width: @break_xs){
        @value: @atom * @n;
        margin-left: ~"calc(@{value} + @{offset_one_side})";
        margin-right: ~"calc(@{value} + @{offset_one_side})";
    }
}
.offset-left-xs(@n){
    @media screen and (max-width: @break_xs){
        @value: @atom * @n;
        margin-left: ~"calc(@{value} + @{offset_one_side})";
    }
}
.offset-right-xs(@n){
    @media screen and (max-width: @break_xs){
        @value: @atom * @n;
        margin-right: ~"calc(@{value} + @{offset_one_side})";
    }
}
.offset-padding-xs(@n){
    @media screen and (max-width: @break_xs){
        @value: @atom * @n;
        padding-left: ~"calc(@{value} + @{offset_one_side})";
        padding-right: ~"calc(@{value} + @{offset_one_side})";
    }
}
.offset-left-padding-xs(@n){
    @media screen and (max-width: @break_xs){
        @value: @atom * @n;
        padding-left: ~"calc(@{value} + @{offset_one_side})";
    }
}
.offset-right-padding-xs(@n){
    @media screen and (max-width: @break_xs){
        @value: @atom * @n;
        padding-right: ~"calc(@{value} + @{offset_one_side})";
    }
}
.justify-content-xs(@value){
    @media screen and (max-width: @break_xs){
        justify-content: @value;
    }
}
.align-items-xs(@value){
    @media screen and (max-width: @break_xs){
        align-items: @value;
    }
}
.align-content-xs(@value){
    @media screen and (max-width: @break_xs){
        align-content: @value;
    }
}
.align-self-xs(@value){
    @media screen and (max-width: @break_xs){
        align-self: @value;
    }
}
.order-xs(@value){
    @media screen and (max-width: @break_xs){
        order: @value;
    }
}
.flex-xs(@value){
    @media screen and (max-width: @break_xs){
        flex: @value;
    }
}
.flex-grow-xs(@value){
    @media screen and (max-width: @break_xs){
        flex-grow: @value;
    }
}
.flex-shrink-xs(@value){
    @media screen and (max-width: @break_xs){
        flex-shrink: @value;
    }
}
.flex-basis-xs(@value){
    @media screen and (max-width: @break_xs){
        flex-basis: @value;
    }
}
.flex-direction-xs(@value){
    @media screen and (max-width: @break_xs){
        flex-direction: @value;
    }
}
.flex-wrap-xs(@value){
    @media screen and (max-width: @break_xs){
        flex-wrap: @value;
    }
}
.flex-flow-xs(@value){
    @media screen and (max-width: @break_xs){
        flex-flow: @value;
    }
}
.float-xs(@value){
    @media screen and (max-width: @break_xs){
        float: @value;
    }
}
.xs(@name, @value){
    @media screen and (max-width: @break_xs){
        @{name}: @value;
    }
}
.xs-block(@content){
    @media screen and (max-width: @break_xs){
        @content();
    }
}
.size-xxs(@n){
    @media screen and (max-width: @break_xxs){
        @value: @atom * @n;
        width: ~"calc(@{value} - @{offset})";
    }
}
.offset-xxs(@n){
    @media screen and (max-width: @break_xxs){
        @value: @atom * @n;
        margin-left: ~"calc(@{value} + @{offset_one_side})";
        margin-right: ~"calc(@{value} + @{offset_one_side})";
    }
}
.offset-left-xxs(@n){
    @media screen and (max-width: @break_xxs){
        @value: @atom * @n;
        margin-left: ~"calc(@{value} + @{offset_one_side})";
    }
}
.offset-right-xxs(@n){
    @media screen and (max-width: @break_xxs){
        @value: @atom * @n;
        margin-right: ~"calc(@{value} + @{offset_one_side})";
    }
}
.offset-padding-xxs(@n){
    @media screen and (max-width: @break_xxs){
        @value: @atom * @n;
        padding-left: ~"calc(@{value} + @{offset_one_side})";
        padding-right: ~"calc(@{value} + @{offset_one_side})";
    }
}
.offset-left-padding-xxs(@n){
    @media screen and (max-width: @break_xxs){
        @value: @atom * @n;
        padding-left: ~"calc(@{value} + @{offset_one_side})";
    }
}
.offset-right-padding-xxs(@n){
    @media screen and (max-width: @break_xxs){
        @value: @atom * @n;
        padding-right: ~"calc(@{value} + @{offset_one_side})";
    }
}
.justify-content-xxs(@value){
    @media screen and (max-width: @break_xxs){
        justify-content: @value;
    }
}
.align-items-xxs(@value){
    @media screen and (max-width: @break_xxs){
        align-items: @value;
    }
}
.align-content-xxs(@value){
    @media screen and (max-width: @break_xxs){
        align-content: @value;
    }
}
.align-self-xxs(@value){
    @media screen and (max-width: @break_xxs){
        align-self: @value;
    }
}
.order-xxs(@value){
    @media screen and (max-width: @break_xxs){
        order: @value;
    }
}
.flex-xxs(@value){
    @media screen and (max-width: @break_xxs){
        flex: @value;
    }
}
.flex-grow-xxs(@value){
    @media screen and (max-width: @break_xxs){
        flex-grow: @value;
    }
}
.flex-shrink-xxs(@value){
    @media screen and (max-width: @break_xxs){
        flex-shrink: @value;
    }
}
.flex-basis-xxs(@value){
    @media screen and (max-width: @break_xxs){
        flex-basis: @value;
    }
}
.flex-direction-xxs(@value){
    @media screen and (max-width: @break_xxs){
        flex-direction: @value;
    }
}
.flex-wrap-xxs(@value){
    @media screen and (max-width: @break_xxs){
        flex-wrap: @value;
    }
}
.flex-flow-xxs(@value){
    @media screen and (max-width: @break_xxs){
        flex-flow: @value;
    }
}
.float-xxs(@value){
    @media screen and (max-width: @break_xxs){
        float: @value;
    }
}
.xxs(@name, @value){
    @media screen and (max-width: @break_xxs){
        @{name}: @value;
    }
}
.xxs-block(@content){
    @media screen and (max-width: @break_xxs){
        @content();
    }
}
.debug(@background, @outline){
    height: 100vh;
    position: fixed;
    width: 100%;
    
    > div{
        height: inherit;
        .wrapper();
        
        > div{
            height: inherit;
            .row-flex();
            
            > div{
                .col();
                .size(1);
                height: inherit;
                outline: @outline;
                background: @background;
            }
        }
    }
}
.clearfix(){
    &::after{
        display: block;
        content: "";
        clear: both;
    }
}
